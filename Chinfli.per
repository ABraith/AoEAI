; UP Constants

(defconst game-time 0)
(defconst population-cap 1)
(defconst population-headroom 2)
(defconst housing-headroom 3)
(defconst idle-farm-count 4)
(defconst food-amount 5)
(defconst wood-amount 6)
(defconst stone-amount 7)
(defconst gold-amount 8)
(defconst escrow-amount 9)
(defconst commodity-buying-price 10)
(defconst commodity-selling-price 11)
(defconst dropsite-min-distance 12)
(defconst soldier-count 13)
(defconst attack-soldier-count 14)
(defconst defend-soldier-count 15)
(defconst warboat-count 16)
(defconst attack-warboat-count 17)
(defconst defend-warboat-count 18)
(defconst current-age 19)
(defconst current-score 20)
(defconst civilization 21)
(defconst player-number 22)
(defconst player-in-game 23)
(defconst unit-count 24)
(defconst unit-type-count 25)
(defconst unit-type-count-total 26)
(defconst building-count 27)
(defconst building-type-count 28)
(defconst building-type-count-total 29)
(defconst population 30)
(defconst military-population 31)
(defconst civilian-population 32)
(defconst random-number 33)
(defconst resource-amount 34)
(defconst player-distance 35)
(defconst villager-class 904)
(defconst building-class 903)
(defconst tower-class 952)
(defconst wall-class 927)
(defconst gate-class 939)
(defconst infantry-class 906)
(defconst archery-class 900)
(defconst cavalry-class 912)
(defconst cavalry-archer-class 936)
(defconst archery-cannon-class 944)
(defconst cavalry-cannon-class 923)
(defconst monastery-class 918)
(defconst siege-weapon-class 913)
(defconst scorpion-class 955)
(defconst packed-trebuchet-class 951)
(defconst unpacked-trebuchet-class 954)
(defconst petard-class 935)
(defconst warship-class 922)
(defconst all-units-class -1)
(defconst research-unavailable 0)
(defconst research-available 1)
(defconst research-pending 2)
(defconst research-complete 3)
(defconst aggressive 0)
(defconst defensive 1)
(defconst stand-ground 2)
(defconst no-attack 3)
(defconst amount-kills 20)
(defconst amount-kill-ratio 44)
(defconst amount-losses 154)
(defconst amount-razings 43)
(defconst amount-conversions 41)
(defconst amount-techs 21)
(defconst amount-relics 7)
(defconst projectile-town-center 0)
(defconst projectile-castle 1)
(defconst projectile-watch-tower 2)
(defconst projectile-bombard-tower 3)
(defconst projectile-ship 4)
(defconst projectile-siege 5)
(defconst projectile-fortification 6)
(defconst projectile-any 7)
(defconst sn-enable-new-building-system 242)
(defconst sn-percent-building-cancellation 243)
(defconst sn-enable-boar-hunting 244)
(defconst sn-minimum-number-hunters 245)
(defconst sn-object-repair-level 246)
(defconst sn-enable-patrol-attack 247)
(defconst sn-dropsite-separation-distance 248)
(defconst sn-target-player-number 249)
(defconst sn-safe-town-size 250)
(defconst sn-focus-player-number 251)
(defconst sn-minimum-boar-lure-group-size 252)
(defconst sn-preferred-mill-placement 253)
(defconst sn-enable-offensive-priority 254)
(defconst sn-building-targeting-mode 255)
(defconst sn-home-exploration-time 256)
(defconst sn-number-civilian-militia 257)
(defconst sn-allow-civilian-offense 258)
(defconst sn-preferred-trade-distance 259)
(defconst sn-lumber-camp-max-distance 260)
(defconst sn-mining-camp-max-distance 261)
(defconst sn-special-attack-influence2 107)
(defconst sn-food-modifier-percentage 156)
(defconst sn-wood-modifier-percentage 157)
(defconst sn-stone-modifier-percentage 158)
(defconst sn-gold-modifier-percentage 159)
(defconst allied-goal 36)
(defconst up-can-research 0)
(defconst up-can-train 0)
(defconst up-can-build 0)
(defconst up-resource-amount 0)
(defconst up-compare-goal 0)
(defconst up-compare-sn 0)
(defconst up-object-type-count 0)
(defconst up-object-type-count-total 0)
(defconst up-research-status 0)
(defconst up-pending-objects 0)
(defconst up-pending-placement 0)
(defconst up-get-player-fact 0)
(defconst up-get-target-fact 0)
(defconst up-attacker-class 0)
(defconst up-projectile-detected 0)
(defconst up-research 0)
(defconst up-train 0)
(defconst up-build 0)
(defconst up-release-escrow 0)
(defconst up-modify-escrow 0)
(defconst up-modify-goal 0)
(defconst up-modify-sn 0)
(defconst up-chat-data-to-self 0)
(defconst up-chat-data-to-player 0)
(defconst up-drop-resources 0)
(defconst up-retask-gatherers 0)
(defconst up-find-player 0)
(defconst up-get-player-fact 0)
(defconst up-get-target-fact 0)
(defconst up-get-allied-target 0)
(defconst up-get-attacker-class 0)
(defconst up-get-projectile-player 0)
(defconst up-get-threat-data 0)
(defconst up-get-victory-data 0)
(defconst up-guard-unit 0)
(defconst up-reset-unit 0)
(defconst up-set-attack-stance 0)
(defconst up-retreat-to 0)
(defconst up-retreat-now 0)
(defconst sn-maximum-tower-attackers 0)
(defconst find-attacker 0)
(defconst find-random 1)
(defconst find-closest 2)

;===========
;=Constants=
;===========
;Map Sizes
;=========
#load-if-defined TINY-MAP
(defconst num-fish 40)
#end-if
#load-if-defined SMALL-MAP
(defconst num-fish 60)
#end-if
#load-if-defined MEDIUM-MAP
(defconst num-fish 80)
#end-if
#load-if-defined NORMAL-MAP
(defconst num-fish 120)
#end-if
#load-if-defined LARGE-MAP
(defconst num-fish 140)
#end-if
#load-if-defined GIANT-MAP
(defconst num-fish 160)
#end-if
;Goals
;=====
(defconst g-tempmaths1 1)
(defconst g-tempmaths2 2)
(defconst g-population-superiority 3)
(defconst g-tcs 4)
;5 =			UNUSED
;6 =			UNUSED
;7 =			UNUSED
;8 =			UNUSED
;9 =			UNUSED
;10=			UNUSED
;Timers
;======
(defconst t-attacking 1)
(defconst t-lumber 2)
(defconst t-mining 3)
(defconst t-forcedrop 4)
(defconst t-boars 5)
;6 =			UNUSED
;7 =			UNUSED
;8 =			UNUSED
;9 =			UNUSED
;10=			UNUSED
;Unit/research-ids
;=================
(defconst fidle 293)
(defconst mdead-miner 229)
(defconst fdead-miner 221)
(defconst mdead-lumber 228)
(defconst fdead-lumber 219)

(defconst unpack-treb 42)
(defconst livestock-line 958)

(defconst deep-fish 905)
(defconst shore-fish 933)
;Strategic-numbers
;=================
(defconst sn-sea-superiority 8)
(defconst sn-military-superiority 9)
(defconst land-dock 3000)
(defconst islands-dock 4000)
;==========
;=Commerce=
;==========
;Advancing
;=========
;Buy
;===
(defrule
	(gold-amount > 1500)
	(stone-amount < 650)
	(can-buy-commodity stone)
=>
	(buy-commodity stone)
;	(chat-local-to-self "bs")
)
(defrule
	(or(and(gold-amount > 500)
	       (food-amount < 200))
	(or(and(gold-amount > 900)
	       (food-amount < 1000))
	   (and(gold-amount > 300)
	   (and(food-amount < 800)
	       (up-research-status c: castle-age c:< research-pending)))))
	(can-buy-commodity food)
=>
	(buy-commodity food)
;	(chat-local-to-self "bf")
)
(defrule
	(or(and(gold-amount > 500)
	       (wood-amount < 200))
	(or(and(gold-amount > 1000)
	       (wood-amount < 500))
	   (and(gold-amount > 1300)
	       (wood-amount < 500))))
	(can-buy-commodity wood)
=>
	(buy-commodity wood)
;	(chat-local-to-self "bw")
)
;Sell
;====
(defrule
	(gold-amount < 500)
	(stone-amount > 750)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
;	(chat-local-to-self "ss")
)
(defrule
	(or(and(gold-amount < 200)
	       (food-amount > 500))
	   (and(gold-amount < 800)
	       (food-amount > 1100)))
	(can-sell-commodity food)
=>
	(sell-commodity food)
;	(chat-local-to-self "sf")
)
(defrule
	(or(and(gold-amount < 200)
	       (wood-amount > 500))
	(or(and(gold-amount < 500)
	       (wood-amount > 1000))
	   (and(gold-amount < 500)
	       (wood-amount > 1300))))
	(can-sell-commodity wood)
=>
	(sell-commodity wood)
;	(chat-local-to-self "sw")
)
;===================
;=Strategic numbers=
;===================
;Military Superiority
;====================
(defrule
	(taunt-detected my-player-number 1)
=>
	(up-chat-data-to-player my-player-number "tot-pop-sup: %d" g: g-population-superiority)
	(up-chat-data-to-player my-player-number "mil-sup: %d" s: sn-military-superiority)
	(up-chat-data-to-player my-player-number "sea-sup est: %d" s: sn-sea-superiority)

	(up-get-player-fact my-player-number unit-type-count infantry-class g-tempmaths1)
	(up-chat-data-to-player my-player-number "inf: %d" g: g-tempmaths1)

	(up-get-player-fact my-player-number unit-type-count siege-weapon-class g-tempmaths1)
	(up-chat-data-to-player my-player-number "siege: %d" g: g-tempmaths1)
	(up-get-player-fact my-player-number unit-type-count cavalry-class g-tempmaths1)
	(up-chat-data-to-player my-player-number "cav: %d" g: g-tempmaths1)

	(acknowledge-taunt my-player-number 1)
)
;Returns percentage of enemy army/navy we have (ie fraction*100)
(defrule
	(true)
=>
	(up-get-player-fact my-player-number military-population 0 g-tempmaths1)
	(up-get-fact-max any-enemy military-population 0 g-tempmaths2)
	(up-modify-goal g-tempmaths1 g:%/ g-tempmaths2)
	(up-modify-sn sn-military-superiority g:= g-tempmaths1)

	(up-get-fact-max any-enemy unit-type-count galley-line g-tempmaths1)
	(up-get-fact-max any-enemy unit-type-count fire-ship-line g-tempmaths2)
	(up-modify-goal g-tempmaths2 g:+ g-tempmaths1)
	(up-get-player-fact my-player-number warboat-count 0 g-tempmaths1)
	(up-modify-goal g-tempmaths1 g:%/ g-tempmaths2)
	(up-modify-sn sn-sea-superiority g:= g-tempmaths1)

	(up-get-fact-sum any-ally population 0 g-population-superiority)
	(up-get-player-fact my-player-number population 0 g-tempmaths1)
	(up-modify-goal g-population-superiority g:+ g-tempmaths1);1=our pop, 2=theirs
	(up-get-fact-sum any-enemy population 0 g-tempmaths1)
	(up-modify-goal g-population-superiority g:%/ g-tempmaths1);1=% of their pop we have
)
;Other stuff done every turn
(defrule
	(true)
=>
	(set-goal g-tempmaths1 0)
	(up-modify-goal g-tempmaths1 s:+ sn-maximum-town-size)
	(up-modify-goal g-tempmaths1 c:* 2)
	(up-modify-goal g-tempmaths1 c:/ 5);ie assume average building size of n x n
	(up-modify-goal g-tempmaths1 g:* g-tempmaths1)
	(up-get-player-fact my-player-number building-type-count town-center g-tcs)
)
;Initialisation
;==============
(defrule
	(strategic-number sn-consecutive-idle-unit-limit != 1)
=>
	(set-strategic-number sn-consecutive-idle-unit-limit 1)
	(set-strategic-number sn-allow-civilian-defense 0)
	(set-strategic-number sn-number-explore-groups 10)
	(set-strategic-number sn-number-boat-explore-groups 1)

	(set-strategic-number sn-percent-enemy-sighted-response 100)
	(set-strategic-number sn-enemy-sighted-response-distance 25)
	(set-strategic-number sn-relic-return-distance 255)

	(set-difficulty-parameter ability-to-dodge-missiles 0)
	(set-difficulty-parameter ability-to-maintain-distance 50)
) 
(defrule
	(can-research ri-loom)
=>
	(set-strategic-number sn-retask-gather-amount 0)
	(set-strategic-number sn-cap-civilian-builders 20)
	(set-strategic-number sn-initial-exploration-required 0)

	(set-strategic-number sn-lumber-camp-max-distance 10)
	(set-strategic-number sn-mining-camp-max-distance 20)
	(set-strategic-number sn-mill-max-distance 20)
	(set-strategic-number sn-minimum-water-body-size-for-dock land-dock)

	(set-strategic-number sn-maximum-food-drop-distance 5)
	(set-strategic-number sn-maximum-wood-drop-distance 0)
	(set-strategic-number sn-maximum-gold-drop-distance 0)
	(set-strategic-number sn-maximum-stone-drop-distance 0)

	(set-strategic-number sn-maximum-hunt-drop-distance 5)
	(set-strategic-number sn-food-gatherer-percentage  100)
	(set-strategic-number sn-maximum-town-size 10)
	(research ri-loom)
)
(defrule
	(strategic-number sn-attack-group-size-randomness != 5)
=>
	(enable-timer t-attacking 60)
	(enable-timer t-mining 60)
	(enable-timer t-lumber 60)

	(set-strategic-number sn-maximum-attack-group-size 50)
	(set-strategic-number sn-minimum-attack-group-size 15)
	(set-strategic-number sn-attack-group-size-randomness 5)
	(set-strategic-number sn-group-form-distance 25)

	(set-strategic-number sn-attack-intelligence 1)
	(set-strategic-number sn-intelligent-gathering 1)
	(set-strategic-number sn-minimum-dropsite-buffer 50)
	(set-strategic-number sn-target-evaluation-distance 200)

	(set-strategic-number sn-target-evaluation-ally-proximity 150)
	(set-strategic-number sn-target-evaluation-time-kill-ratio 100)
	(up-assign-builders c: town-center c: 4)
	(up-assign-builders c: 621  c: 4)
)
(defrule
	(strategic-number sn-enable-new-building-system != 1)
=>
	(set-strategic-number sn-food-gatherer-percentage  0)
	(set-strategic-number sn-wood-gatherer-percentage  0)
	(set-strategic-number sn-cap-civilian-explorers 10)

	(set-strategic-number sn-minimum-civilian-explorers 10)
	(set-strategic-number sn-livestock-to-town-center 1)
	(set-strategic-number sn-percent-civilian-explorers 100)
	(set-strategic-number sn-cap-civilian-gatherers 0)

	(set-strategic-number sn-percent-civilian-gatherers 0)
	(set-strategic-number sn-enable-new-building-system 1)
	(up-assign-builders c: house c: 2)

	(up-assign-builders c: castle c: 5)
	(up-assign-builders c: blacksmith c: 3)
	(up-assign-builders c: market c: 3)
	(enable-wall-placement 2)
)
(defrule
	(or(cc-players-unit-type-count 0 deep-fish > num-fish)
	   (cc-players-unit-type-count 0 shore-fish > num-fish))
	(wall-completed-percentage 2 == 100)
=>
	(set-strategic-number sn-minimum-water-body-size-for-dock islands-dock)
	(chat-local-to-self "watermap")
	(disable-self)
)
;Dark econ
;---------
;force drop inspired by the horde/chamelion
(defrule
	(food-amount < 50)
	(unit-type-count villager-food > 0)
	(up-pending-objects c: mill == 0)
	(timer-triggered t-forcedrop)
=>
	(set-goal g-tempmaths1 50)
	(up-get-player-fact my-player-number food-amount 0 g-tempmaths2)
	(up-modify-goal g-tempmaths1 g:- g-tempmaths2)
	(up-get-player-fact my-player-number unit-type-count villager-food g-tempmaths2)

	(up-modify-goal g-tempmaths1 g:/ g-tempmaths2)
	(up-modify-goal g-tempmaths1 c:+ 1)
	(up-drop-resources food g: g-tempmaths1)
	(up-chat-data-to-self "drop %d f vilgr" g: g-tempmaths1)

	(enable-timer t-forcedrop 5)
)
(defrule
	(food-amount < 800)
	(food-amount > 700)
	(gold-amount > 199)
	(up-research-status c: castle-age c:< research-pending)
	(building-type-count-total market > 0)
	(timer-triggered t-forcedrop)
=>
	(set-goal g-tempmaths1 800)
	(up-get-player-fact my-player-number food-amount 0 g-tempmaths2)
	(up-modify-goal g-tempmaths1 g:- g-tempmaths2)
	(up-get-player-fact my-player-number unit-type-count villager-food g-tempmaths2)

	(up-modify-goal g-tempmaths1 g:/ g-tempmaths2)
	(up-modify-goal g-tempmaths1 c:+ 1)
	(up-drop-resources food g: g-tempmaths1)
	(up-chat-data-to-self "drop %d f castl" g: g-tempmaths1)

	(enable-timer t-forcedrop 5)
)
(defrule
	(building-type-count-total town-center > 0)
	(or(unit-type-count livestock-line > 1)
	   (building-type-count-total mill > 0))
	(strategic-number sn-cap-civilian-explorers != 0)
=>
	(chat-local-to-self "to f")
	(set-strategic-number sn-food-gatherer-percentage  100)
	(set-strategic-number sn-maximum-wood-drop-distance 0)
	(set-strategic-number sn-cap-civilian-explorers 0)
	(set-strategic-number sn-minimum-civilian-explorers 0)
	(set-strategic-number sn-cap-civilian-gatherers 250)
	(set-strategic-number sn-number-explore-groups 1)
	(set-strategic-number sn-maximum-food-drop-distance 15)
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != islands-dock)
	(or(civilian-population > 9)
	   (game-time > 300))
	(strategic-number sn-maximum-wood-drop-distance != 10)
=>
	(set-strategic-number sn-food-gatherer-percentage  80);8+ on f
	(set-strategic-number sn-wood-gatherer-percentage  20);rest on w
	(set-strategic-number sn-maximum-wood-drop-distance 10)
	(set-strategic-number sn-maximum-food-drop-distance 20)
	(set-strategic-number sn-maximum-wood-drop-distance 10)
	(set-strategic-number sn-lumber-camp-max-distance 12)
	(chat-local-to-self "furr")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock != islands-dock)
	(civilian-population > 13)
	(game-time > 60)
=>
	(set-strategic-number sn-food-gatherer-percentage  60)
	(set-strategic-number sn-wood-gatherer-percentage  40)
	(set-strategic-number sn-maximum-stone-drop-distance 7)
	(set-strategic-number sn-maximum-gold-drop-distance 7)
	(set-strategic-number sn-lumber-camp-max-distance 16)
	(chat-local-to-self "murr")
	(disable-self)
)
(defrule
	(up-research-status c: feudal-age c:< research-pending)
	(civilian-population > 15)
	(dropsite-min-distance hunting < 30)
	(strategic-number sn-enable-boar-hunting == 0)
=>
	(set-strategic-number sn-enable-boar-hunting 2)
	(set-strategic-number sn-minimum-number-hunters 1)
	(set-strategic-number sn-maximum-hunt-drop-distance 30)
	(set-strategic-number sn-maximum-food-drop-distance 20)
	(set-strategic-number sn-minimum-boar-lure-group-size 1)
	(set-strategic-number sn-minimum-boar-hunt-group-size 1)
	(up-retask-gatherers food c: 1)
	(chat-local-to-self "boars")
	(set-strategic-number sn-lumber-camp-max-distance 21)
	(enable-timer t-boars 40)
)
(defrule
	(timer-triggered t-boars)
	(strategic-number sn-enable-boar-hunting == 2)
=>
	(set-strategic-number sn-minimum-number-hunters 4)
	(set-strategic-number sn-minimum-boar-lure-group-size 1)
	(set-strategic-number sn-minimum-boar-hunt-group-size 6)
	(disable-timer t-boars)
	(chat-local-to-self "boars2")
)
(defrule
	(strategic-number sn-minimum-water-body-size-for-dock == islands-dock)
	(civilian-population > 10)
	(game-time > 60)
=>
	(set-strategic-number sn-food-gatherer-percentage  50)
	(set-strategic-number sn-wood-gatherer-percentage  50)
	(set-strategic-number sn-maximum-wood-drop-distance 10)
	(set-strategic-number sn-maximum-food-drop-distance 20)
	(set-strategic-number sn-lumber-camp-max-distance 15)
	(chat-local-to-self "durr")
	(disable-self)
)
;Castle
;------
(defrule
	(up-research-status c: castle-age c:> research-available)
	(up-research-status c: imperial-age c:< research-pending)
	(building-type-count-total dock > 0)
	(strategic-number sn-sea-superiority < 200)
=>
	(set-strategic-number sn-food-gatherer-percentage  20)
	(set-strategic-number sn-wood-gatherer-percentage  56)
	(set-strategic-number sn-gold-gatherer-percentage  10)
	(set-strategic-number sn-stone-gatherer-percentage 14)
)
(defrule
	(up-research-status c: castle-age c:> research-available)
	(up-research-status c: imperial-age c:< research-pending)
	(building-type-count-total castle < 1)
	(or(building-type-count-total dock < 1)
	   (strategic-number sn-sea-superiority > 200))
=>
	(set-strategic-number sn-food-gatherer-percentage  32)
	(set-strategic-number sn-wood-gatherer-percentage  35)
	(set-strategic-number sn-gold-gatherer-percentage  5)
	(set-strategic-number sn-stone-gatherer-percentage 23)
)
(defrule
	(up-research-status c: castle-age c:> research-available)
	(up-research-status c: imperial-age c:< research-pending)
	(building-type-count-total castle > 0)
	(building-type-count-total town-center < 3)
	(or(building-type-count-total dock < 1)
	   (strategic-number sn-sea-superiority > 200))
=>
	(set-strategic-number sn-food-gatherer-percentage  34)
	(set-strategic-number sn-wood-gatherer-percentage  45)
	(set-strategic-number sn-gold-gatherer-percentage  10)
	(set-strategic-number sn-stone-gatherer-percentage 8)
)
(defrule
	(up-research-status c: castle-age c:> research-available)
	(up-research-status c: imperial-age c:< research-pending)
	(building-type-count-total town-center > 2)
	(or(building-type-count-total dock < 1)
	   (strategic-number sn-sea-superiority > 200))
=>
	(set-strategic-number sn-food-gatherer-percentage  52)
	(set-strategic-number sn-wood-gatherer-percentage  34)
	(set-strategic-number sn-gold-gatherer-percentage  12)
	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(up-research-status c: castle-age c:> research-available)
	(up-research-status c: imperial-age c:< research-pending)
	(building-type-count-total town-center > 2)
	(or(and(food-amount > 300)
	       (gold-amount < 50))
	   (and(food-amount > 1000)
	       (gold-amount < 800)))
	(or(building-type-count-total dock < 1)
	   (strategic-number sn-sea-superiority > 200))
=>
	(set-strategic-number sn-food-gatherer-percentage  24)
	(set-strategic-number sn-wood-gatherer-percentage  38)
	(set-strategic-number sn-gold-gatherer-percentage  35)
;	(set-strategic-number sn-stone-gatherer-percentage 3)
)
(defrule
	(up-research-status c: castle-age c:> research-available)
	(up-research-status c: imperial-age c:< research-pending)
	(building-type-count-total town-center > 2)
	(or(and(food-amount < 300)
	       (gold-amount > 200))
	   (and(food-amount < 1000) 
	       (gold-amount > 800)))
	(or(building-type-count-total dock < 1)
	   (strategic-number sn-sea-superiority > 200))
=>
	(set-strategic-number sn-food-gatherer-percentage  46)
	(set-strategic-number sn-wood-gatherer-percentage  38)
	(set-strategic-number sn-gold-gatherer-percentage  13)
;	(set-strategic-number sn-stone-gatherer-percentage 3)
)
;Imperial
;--------
(defrule
	(up-research-status c: imperial-age c:> research-available)
=>
	(set-strategic-number sn-food-gatherer-percentage  32);villager, spearman, chu-ko-nu, skirmisher, scorpion, farm 
	(set-strategic-number sn-wood-gatherer-percentage  38);110f,235w,110g
	(set-strategic-number sn-gold-gatherer-percentage  25)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
(defrule
	(up-research-status c: imperial-age c:> research-available)
	(food-amount > 400)
	(gold-amount < 200)
=>
	(set-strategic-number sn-food-gatherer-percentage  21)
	(set-strategic-number sn-wood-gatherer-percentage  40)
	(set-strategic-number sn-gold-gatherer-percentage  35)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
(defrule
	(up-research-status c: imperial-age c:> research-available)
	(food-amount < 200)
	(gold-amount > 400)
=>
	(set-strategic-number sn-food-gatherer-percentage  36)
	(set-strategic-number sn-wood-gatherer-percentage  40)
	(set-strategic-number sn-gold-gatherer-percentage  20)
	(set-strategic-number sn-stone-gatherer-percentage 4)
)
;Town-size
;---------
(defrule
	(up-get-player-fact my-player-number building-count 0 g-tempmaths2)
	(up-compare-goal g-tempmaths1 g:> g-tempmaths2)
	(strategic-number sn-maximum-town-size > 12)
=>
	(up-modify-sn sn-maximum-town-size c:- 1)
 	(up-chat-data-to-player my-player-number "town-size: %d" s: sn-maximum-town-size)
)
(defrule
	(wood-amount > 174)
	(or(up-pending-placement c: barracks)
	(or(up-pending-placement c: archery-range)
	(or(up-pending-placement c: monastery)
	(or(up-pending-placement c: blacksmith)
	(or(up-pending-placement c: market)
	   (up-pending-placement c: stable))))))
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
)
(defrule
	(or(and(up-pending-placement c: castle)
	       (can-afford-building castle))
	(or(and(up-pending-placement c: siege-workshop)
	       (can-afford-building siege-workshop))
	(or(and(up-pending-placement c: house)
	       (can-afford-building house))
	   (and(up-pending-placement c: town-center)
	       (can-afford-building town-center)))))
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
)
;==========
;=Research=
;==========
;Advancing
;=========
(defrule
	(can-research-with-escrow imperial-age)
	(building-type-count town-center > 1)
=>
	(release-escrow food)
	(release-escrow gold)

	(research imperial-age)

	(set-escrow-percentage food 0)
	(set-escrow-percentage wood 2)
	(set-escrow-percentage gold 2)
)
(defrule
	(can-research castle-age)
	(civilian-population > 20)
=>
	(research castle-age)

;	(set-escrow-percentage food 0)
;	(set-escrow-percentage gold 0)
	(set-escrow-percentage wood 40)
)
(defrule
	(current-age == castle-age)
	(escrow-amount gold > 800)
=>
	(set-escrow-percentage gold 0)
)
(defrule
	(current-age == castle-age)
	(escrow-amount food > 1000)
=>
	(set-escrow-percentage food 0)
)
(defrule
	(can-research feudal-age)
	(civilian-population > 28)
=>
	(research feudal-age);all gather percentages adjusted slightly
	(set-strategic-number sn-food-gatherer-percentage  44);1140f  (castle, 5 vil, ri-double-bit-axe)
	(set-strategic-number sn-wood-gatherer-percentage  40);1005w  (6farm, mining camp, barracks, archery, blacksmith, ri-double-bit-axe)

	(set-strategic-number sn-gold-gatherer-percentage  16);200g  (castle)
;	(set-strategic-number sn-stone-gatherer-percentage 0)
;	(set-strategic-number sn-maximum-hunt-drop-distance 30)
	(set-strategic-number sn-maximum-gold-drop-distance 7)
	(set-strategic-number sn-maximum-stone-drop-distance 7)
	(set-strategic-number sn-maximum-food-drop-distance 20)

	(set-strategic-number sn-enable-boar-hunting 1)
	(set-strategic-number sn-enable-training-queue 1)
	(disable-self)
)
;Other stuff
;===========
(defrule
	(unit-type-count-total galley-line > 5)
	(or(can-research ri-fletching)
	(or(can-research ri-careening)
	(or(can-research ri-war-galley)
	(or(can-research ri-galleon)
	   (can-research ri-shipwright)))))

=>
	(research ri-fletching)
	(research ri-careening)
	(research ri-war-galley)
	(research ri-galleon)
	(research ri-shipwright)
)
(defrule
	(unit-type-count-total galley-line > 5)
	(or(can-research ri-dry-dock)
	   (can-research ri-deck-guns))
=>
	(research ri-dry-dock)
	(research ri-deck-guns)
)
(defrule
	(or(can-research ri-wheel-barrow)
	   (and(can-research ri-man-at-arms)
	       (unit-type-count militiaman > 1)))
=>
	(research ri-wheel-barrow)
	(research ri-man-at-arms)
)
;Castle research
(defrule
	(or(can-research ri-double-bit-axe)
	   (can-research ri-bow-saw))
=>
	(research ri-double-bit-axe)
	(research ri-bow-saw)
)
(defrule
	(building-type-count-total town-center > 1)
	(or(can-research ri-horse-collar)
	(or(and(can-research ri-heavy-plow)
	       (up-research-status c: ri-bow-saw c:> research-available))
	   (can-research ri-hand-cart)))
=>
	(research ri-hand-cart)
	(research ri-horse-collar)
	(research ri-heavy-plow)
)
(defrule
	(building-type-count-total town-center > 1)
	(or(can-research ri-gold-mining)
	(or(can-research ri-gold-shaft-mining)
	(or(can-research ri-stone-mining)
	   (can-research ri-stone-shaft-mining))))
=>
	(research ri-gold-mining)
	(research ri-gold-shaft-mining)
	(research ri-stone-mining)
	(research ri-stone-shaft-mining)
)
(defrule
	(players-building-type-count any-ally market > 0)
	(up-research-status c: ri-gold-mining c:> research-available)
	(or(can-research ri-cartography)
	   (can-research ri-caravan))
=>
	(research ri-cartography)
	(research ri-caravan)
)
(defrule
	(building-type-count-total town-center > 1)
	(or(can-research ri-pikeman)
	(or(can-research ri-elite-skirmisher)
	   (and(can-research ri-long-swordsman)
	       (unit-type-count militiaman-line > 7))))
=>
	(research ri-pikeman)
	(research ri-elite-skirmisher)
	(research ri-long-swordsman)
)
(defrule
	(building-type-count-total town-center > 1)
	(unit-type-count-total scout-cavalry-line > 4)
	(or(can-research ri-light-cavalry)
	(or(can-research ri-husbandry)
	   (can-research ri-bloodlines)))
=>
	(research ri-light-cavalry)
	(research ri-bloodlines)
	(research ri-husbandry)
)
(defrule
	(building-type-count-total town-center > 1)
	(or(can-research ri-fletching)
	   (can-research ri-bodkin-arrow))
=>
	(research ri-fletching)
	(research ri-bodkin-arrow)
)
(defrule
	(up-research-status c: ri-fletching c:> research-available)
	(or(can-research ri-scale-mail)
	   (can-research ri-chain-mail))
=>
	(research ri-scale-mail)
	(research ri-chain-mail)
)
(defrule
	(up-research-status c: ri-scale-mail c:> research-available)
	(or(can-research ri-padded-archer-armor)
	   (can-research ri-leather-archer-armor))
=>
	(research ri-padded-archer-armor)
	(research ri-leather-archer-armor)
)
(defrule
	(up-research-status c: ri-padded-archer-armor c:> research-available)
	(or(can-research ri-forging)
	   (can-research ri-iron-casting))
=>
	(research ri-forging)
	(research ri-iron-casting)
)
(defrule
	(up-research-status c: ri-iron-casting c:> research-available)
	(or(can-research ri-sanctity)
	(or(can-research ri-fervor)
	(or(can-research ri-illumination)
	(or(can-research ri-scale-barding)
	   (can-research ri-chain-barding)))))
=>
	(research ri-scale-barding)
	(research ri-chain-barding)
	(research ri-sanctity)
	(research ri-fervor)
	(research ri-illumination)
)
;IMPERIAL RESEARCH
(defrule
	(up-research-status c: ri-bodkin-arrow c:> research-available)
	(or(can-research ri-two-man-saw)
	(or(can-research ri-thumb-ring)
;	(or(can-research ri-arbalest)
	(or(can-research my-unique-research)
	   (can-research ri-conscription))))
=>
	(research ri-two-man-saw)
	(research ri-thumb-ring)
;	(research ri-arbalest)
	(research my-unique-research)
	(research ri-conscription)
)
(defrule
	(up-research-status c: ri-thumb-ring c:> research-available)
	(or(can-research ri-plate-mail)
	(or(can-research ri-bracer)
	(or(can-research ri-blast-furnace)
	   (can-research ri-ring-archer-armor))))
=>
	(research ri-bracer)
	(research ri-plate-mail)
	(research ri-ring-archer-armor)
	(research ri-blast-furnace)
)
(defrule
	(up-research-status c: ri-bracer c:> research-available)
	(or(can-research ri-squires)
	(or(can-research ri-halberdier)
	(or(can-research ri-chemistry)
	(or(can-research ri-two-handed-swordsman)
	   (can-research ri-ballistics)))))
=>
	(research ri-halberdier)
	(research ri-ballistics)
	(research ri-chemistry)
	(research ri-two-handed-swordsman)
	(research ri-squires)
)
(defrule
	(up-research-status c: ri-chemistry c:> research-available)
	(or(can-research ri-capped-ram)
	(or(can-research ri-heavy-scorpion)
	(or(can-research ri-masonry)
	(or(can-research ri-architecture)
	   (can-research ri-plate-barding)))))
=>
	(research ri-capped-ram)
	(research ri-heavy-scorpion)
	(research ri-plate-barding)
	(research ri-masonry)
	(research ri-architecture)
)
(defrule
	(up-research-status c: ri-capped-ram c:> research-available)
	(or(can-research ri-siege-ram)
	(or(can-research ri-fortified-wall)
	   (can-research ri-elite-chu-ko-nu)))
=>
	(research ri-siege-ram)
	(research ri-elite-chu-ko-nu)
	(research ri-fortified-wall)
	(chat-local-to-self "srsnow")
)
;==========
;=Building=
;==========
(defrule
	(unit-type-count mdead-miner > 1)
	(timer-triggered t-mining)
	(can-build mining-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 20)
	(build mining-camp)
	(enable-timer t-mining 300)
	(chat-local-to-self "deadmine")
	(set-strategic-number sn-dropsite-separation-distance 5)
)
(defrule
	(unit-type-count mdead-lumber > 3)
	(timer-triggered t-lumber)
	(can-build lumber-camp)
=>
	(set-strategic-number sn-dropsite-separation-distance 20)
	(build lumber-camp)
	(enable-timer t-lumber 300)
	(chat-local-to-self "deadwood")
	(set-strategic-number sn-dropsite-separation-distance 5)
)
(defrule
	(building-type-count-total town-center > 0)
	(housing-headroom < 10)
	(or(current-age > dark-age)
	   (housing-headroom <= 2))
	(population-headroom > 0)
	(can-build house)
	(up-pending-objects c: house c:< 1)
=>
	(build house)
)
(defrule
	(can-build-with-escrow town-center)
	(building-type-count-total town-center < 4)
	(or(and(dropsite-min-distance wood < 7)
	       (building-type-count-total monastery > 0))
	   (building-type-count-total town-center < 1))
=>
	(release-escrow wood)
	(set-escrow-percentage wood 0)
	(build town-center)
)
(defrule
	(building-type-count-total town-center > 0)
	(or(resource-found food)
	   (game-time > 300))
	(can-build mill)
	(or(building-type-count-total mill < 1)
	   (and(up-research-status c: feudal-age c:> research-available)
	   (and(unit-type-count villager-hunter > 1)
	       (dropsite-min-distance hunting > 15))))
	(up-pending-objects c: mill c:< 1)
=>
	(build mill)
	(up-modify-sn sn-mill-max-distance c:+ 15)
)
(defrule
	(or(and(building-type-count-total town-center < 1)
	   (and(wood-amount < 275)
	       (building-type-count-total lumber-camp < 1)))
	(or(dropsite-min-distance wood > 3)
	   (and(building-type-count-total lumber-camp < 3)
	       (building-type-count-total market > 0))))
	(building-type-count-total mill > 0)
;	(building-type-count-total house > 1)
	(can-build lumber-camp)
=>
	(build lumber-camp)
	(up-modify-sn sn-lumber-camp-max-distance c:+ 10)
)
(defrule
	(can-build farm)
	(idle-farm-count < 3)
	(or(building-type-count-total farm < 10)
	(or(building-type-count-total market > 0)
	(or(up-research-status c: castle-age c:> research-available)
	   (up-research-status c: feudal-age c:< research-pending))))
	(dropsite-min-distance wood < 7)
	(up-pending-objects c: farm c:< 3)
	(or(building-type-count-total lumber-camp > 0)
	   (dropsite-min-distance wood < 3))
=>
	(build farm)
)
(defrule
	(resource-found gold)
	(can-build mining-camp)
	(or(and(up-research-status c: castle-age c:> research-available)
	       (dropsite-min-distance stone > 4))
	   (and(up-research-status c: feudal-age c:> research-available)
	       (dropsite-min-distance gold > 4)))
	(up-pending-objects c: mining-camp c:< 1)
=>
	(build mining-camp)
	(up-modify-sn sn-mining-camp-max-distance c:+ 10)
)
(defrule
	(can-build market)
	(building-type-count-total market < 1)
	(building-type-count-total blacksmith > 0)
	(dropsite-min-distance wood < 7)
=>
	(build market)
	(set-strategic-number sn-food-gatherer-percentage  59)
	(set-strategic-number sn-wood-gatherer-percentage  30)
	(set-strategic-number sn-gold-gatherer-percentage  21)
;	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(or(building-type-count-total town-center > 2)
	   (and(building-type-count-total siege-workshop < 1)
	       (or(players-building-type-count any-enemy watch-tower-line > 0)
	          (strategic-number sn-military-superiority > 120))))
	(building-type-count-total siege-workshop < 3)
	(can-build siege-workshop)
	(building-type-count-total monastery > 0)
	(dropsite-min-distance wood < 7)
	(housing-headroom > 0)
=>
	(build siege-workshop)
)
(defrule
	(can-build dock)
	(building-type-count-total lumber-camp > 0)
	(dropsite-min-distance wood < 7)
	(up-research-status c: castle-age c:> research-available)
	(or(building-type-count-total town-center > 3)
	   (building-type-count-total dock < 1))
	(building-type-count-total dock < 3)
	(housing-headroom > 0)
=>
	(build dock)
)
(defrule
	(building-type-count-total barracks < 3)
	(can-build barracks)
	(building-type-count-total market > 0)
	(or(building-type-count-total town-center > 3)
	   (building-type-count-total barracks < 1))
	(dropsite-min-distance wood < 7)
=>
	(build barracks)
)
(defrule
	(building-type-count-total archery-range < 3)
	(building-type-count-total town-center > 0)
	(can-build archery-range)
	(or(building-type-count-total town-center > 3)
	   (building-type-count-total archery-range < 1))
	(dropsite-min-distance wood < 7)
=>
	(build archery-range)
)
(defrule
	(building-type-count-total stable < 3)
	(building-type-count-total town-center > 0)
	(can-build stable)
	(or(building-type-count-total town-center > 3)
	   (building-type-count-total stable < 1))
	(dropsite-min-distance wood < 7)
=>
	(build stable)
)
(defrule
	(can-build blacksmith)
	(building-type-count-total blacksmith < 1)
	(dropsite-min-distance wood < 7)
=>
	(build blacksmith)
)
(defrule
	(can-build-with-escrow monastery)
	(building-type-count-total monastery < 1)
	(dropsite-min-distance wood < 7)
=>
	(release-escrow wood)
	(build monastery)
)
(defrule
	(can-build university)
	(building-type-count-total town-center > 3)
	(building-type-count-total university < 1)
	(building-type-count-total monastery > 0)
	(dropsite-min-distance wood < 7)
=>
	(up-modify-sn sn-maximum-town-size c:+ 4)
	(build university)
)
(defrule
	(can-build castle)
=>
	(build castle)
)
(defrule
	(can-afford-complete-wall 2 stone-wall-line)
	(wall-invisible-percentage 2 == 0)
;	(wall-completed-percentage 2 > 40)
	(wall-completed-percentage 2 < 100)
	(building-type-count-total castle > 1)
=>
	(build-wall 2 stone-wall-line)
)
(defrule
	(can-build-gate 2)
	(wall-completed-percentage 2 > 60)
	(building-type-count-total gate < 8)
=>
	(build-gate 2)
)

;==========
;=Training=
;==========
(defrule
	(can-train villager)
	(civilian-population < 120)
	(unit-type-count fidle < 3)
	(or(gold-amount < 750)
	   (civilian-population < 80))
	(or(up-research-status c: castle-age c:> research-available)
	(or(building-type-count-total market < 1)
	   (gold-amount < 150)))
=>
	(train villager)
	(enable-timer t-forcedrop 20)
)
(defrule
	(can-train fire-ship-line)
	(or(unit-type-count-total fire-ship-line < 5)
	   (strategic-number sn-sea-superiority < 200))
=>
	(train fire-ship-line)
)
(defrule
	(current-age > feudal-age)
	(can-train galley-line)
	(strategic-number sn-sea-superiority > 200)
	(strategic-number sn-sea-superiority < 400)
=>
	(train galley-line)
)
(defrule
	(can-train cannon-galleon-line)
	(unit-type-count-total cannon-galleon-line < 3)
	(strategic-number sn-sea-superiority > 200)
=>
	(train cannon-galleon-line)
)
(defrule
	(can-train fishing-ship)
	(unit-type-count-total fishing-ship < 15)
	(cc-players-unit-type-count 0 deep-fish > 3)
	(or(up-research-status c: castle-age c:> research-available)
	   (unit-type-count-total fishing-ship < 7))
	(or(population < 195)
	   (housing-headroom > 5))
	(or(strategic-number sn-sea-superiority > 200)
	   (current-age < castle-age))
	(or(building-type-count-total dock > 1)
	   (up-research-status c: castle-age c:< research-pending))
=>
	(train fishing-ship)
)
(defrule
	(gold-amount > 700)
	(civilian-population > 100)
	(up-research-status c: ri-elite-chu-ko-nu c:> research-available)
	(housing-headroom < 10)
=>
	(delete-unit villager)
	(chat-local-to-self "delvil")
)
(defrule
	(not(town-under-attack))
	(can-train-with-escrow trebuchet)
	(unit-type-count-total trebuchet-set < 4)
	(or(strategic-number sn-military-superiority > 100)
	   (population > 190))
=>
	(release-escrow wood)
	(release-escrow gold)
	(train trebuchet)
)
(defrule
	(or(and(up-research-status c: imperial-age c:> research-available)
	       (or(strategic-number sn-military-superiority > 100)
	          (population > 190)))
	   (and(players-building-count any-enemy > 0)
	       (unit-type-count-total battering-ram-line < 1)))
	(can-train battering-ram-line)
	(unit-type-count-total battering-ram-line < 5)
=>
	(train battering-ram-line)
)
(defrule
	(can-train monk)
	(unit-type-count-total monk-set < 5)
	(housing-headroom > 3)
=>
	(train monk)
)
(defrule
	(can-train chu-ko-nu-line)
=>
	(train chu-ko-nu-line)
)
(defrule
	(can-train scorpion-line)
	(unit-type-count-total battering-ram-line > 0)
=>
	(train scorpion-line)
)
(defrule
	(or(up-pending-objects c: villager g:> g-tcs)
	(or(strategic-number sn-military-superiority < 80)
	   (civilian-population > 80)))
	(can-train scout-cavalry-line)
	(or(and(unit-type-count-total scout-cavalry-line < 15)
	       (players-unit-type-count any-enemy skirmisher-line > 7))
	(or(and(unit-type-count-total scout-cavalry-line < 20)
	       (players-unit-type-count any-enemy skirmisher-line > 15))
	   (unit-type-count-total scout-cavalry-line < 5)))
=>
	(train scout-cavalry-line)
)
(defrule
	(or(up-pending-objects c: villager g:> g-tcs)
	(or(strategic-number sn-military-superiority < 80)
	   (civilian-population > 80)))
	(can-train militiaman-line)
	(players-unit-type-count every-enemy knight-line < 10)
	(or(and(unit-type-count-total militiaman-line < 15)
	       (players-unit-type-count any-enemy eagle-warrior-line > 3))
	   (and(unit-type-count-total militiaman-line < 30)
	       (players-unit-type-count any-enemy eagle-warrior-line > 8)))
=>
	(train militiaman-line)
)
(defrule
	(or(up-pending-objects c: villager g:> g-tcs)
	   (strategic-number sn-military-superiority < 80))
	(can-train spearman-line)
	(or(and(unit-type-count-total spearman-line < 25)
	       (players-unit-type-count any-enemy knight-line > 3))
	   (and(players-unit-type-count every-enemy militiaman-line < 9)
	       (unit-type-count-total spearman-line < 15)))
=>
	(train spearman-line)
)
(defrule
	(or(up-pending-objects c: villager g:> g-tcs)
	   (and(strategic-number sn-military-superiority < 80)
	       (building-type-count castle < 1)))
	(can-train skirmisher-line)
	(or(unit-type-count-total skirmisher-line < 10)
	   (and(unit-type-count-total skirmisher-line < 25)
	       (players-unit-type-count any-enemy archer-line > 4)))
=>
	(train skirmisher-line)
)
(defrule
	(players-building-type-count any-ally market > 0)
	(building-type-count-total town-center > 3)
	(or(unit-type-count-total trade-cart < 15)
	   (and(unit-type-count villager-gold < 4)
	       (unit-type-count-total trade-cart < 40)))
	(can-train trade-cart)
=>
	(train trade-cart)
)
;===========
;=Attacking=
;===========
(defrule
	(timer-triggered t-attacking)
	(strategic-number sn-percent-attack-soldiers == 100)
=>
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 200)
	(set-strategic-number sn-minimum-attack-group-size 1)
	(set-strategic-number sn-maximum-attack-group-size 5)
	(chat-local-to-self "atkgrp")
	(enable-timer t-attacking 30)
)
(defrule
	(timer-triggered t-attacking)
	(strategic-number sn-number-attack-groups == 200)
=>
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-attack-groups 0)
	(chat-local-to-self "reset")
	(up-reset-attack-now)
	(enable-timer t-attacking 30)
)
(defrule
	(timer-triggered t-attacking)
	(unit-type-count-total battering-ram-line > 0)
	(or(current-age == imperial-age)
	   (strategic-number sn-military-superiority > 130))
	(or(strategic-number sn-military-superiority > 110)
	   (and(housing-headroom < 10)
           (population-headroom < 5)))
	(strategic-number sn-number-attack-groups == 0)
=>
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-attack-groups 1)
	(attack-now)
	(chat-local-to-self "atknow")
	(enable-timer t-attacking 40)
)
(defrule
	(strategic-number sn-military-superiority < 95)
	(or(housing-headroom > 15)
	   (population-headroom > 10))
	(strategic-number sn-number-attack-groups != 0)
=>
	(set-strategic-number sn-number-attack-groups 0)
	(chat-local-to-self "cancl")
)
(defrule
	(defend-warboat-count > 15)
=>
	(set-strategic-number sn-percent-attack-boats 100)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(attack-now)
	(chat-local-to-self "boatgo")
)
;===========
;=Surrender=
;===========
(defrule
	(true)
=>
	(up-get-fact-max any-enemy population 0 g-tempmaths1)
	(up-get-fact population-cap 0 g-tempmaths2)
	(up-modify-goal g-tempmaths1 g:%/ g-tempmaths2)
)
(defrule
	(or(up-compare-goal g-population-superiority c:< 10)
	   (and(up-compare-goal g-population-superiority c:< 30)
	       (up-compare-goal g-tempmaths1 c:> 50)))
	(strategic-number sn-military-superiority < 40)
=>
	(tribute-to-player any-ally food 50000)
	(tribute-to-player any-ally wood 50000)
	(tribute-to-player any-ally gold 50000)
	(tribute-to-player any-ally stone 50000)
	(chat-to-all "oh fug D:")
	(resign)
)